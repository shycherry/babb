var Path = require('path')

function FilenamesFilter(parFilenames){
  this.c = parFilenames.slice(0)
}

FilenamesFilter.prototype.keepFilesWithExtensions = function (parExts){
  this.c = this.c.filter(function(file){
    var locExtName = Path.extname(file)    
    return parExts.indexOf(locExtName) != -1
  })
    
  return this
}

FilenamesFilter.prototype.removeFilesWithExtensions = function (parExts){
  this.c = this.c.filter(function(file){
    var locExtName = Path.extname(file)
    return parExts.indexOf(locExtName) == -1
  })
    
  return this
}

FilenamesFilter.prototype.removeExtensions = function(){
  this.c.forEach(function(file){
    var locExtName = Path.extname(file)
    file = file.replace(locExtName, '')
  })
  return this
}

FilenamesFilter.prototype.keepBasename = function(){
  this.c.forEach(function(file){    
    file = Path.basename(file)
  })
  return this
}

FilenamesFilter.prototype.get = function(){
  return this.c
}

exports.FilenamesFilter = FilenamesFilter